extends layout

block content
  #container
    header
      h1
        a(href='http://socket.io/', target='_blank').logo Socket.IO
        | 1.0 Example
      .sub-title I wrote these examples for just learning Socket.IO.
    section#simple.example
      h3.title Simple Example
      .window.browser
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title
            span.scheme https://
            | simple-example
          .button
            input(type='button', value='connect')#simple-connect
        .body#simple-content
        .footer
          form#simple-form
            input(type='text')#simple-text
            input(type='submit', value='Send')
      .window.editor
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/client.js
        .body
          pre
            code.js.
              var socket = io.connect(location.origin);
              var content = $('#simple-content');
              socket.on('connect', function() {
                $('#simple-form').show();
                content.append($('&lt;p&gt;').text('connected').prepend($('&lt;span&gt;').text('system')));
              });

              socket.on('message', function(msg) {
                content.append($('&lt;p&gt;').text(msg).prepend($('&lt;span&gt;').text('somebody')));
                content.scrollTop(content.height());
              });

              $('#simple-form').submit(function(e) {
                e.preventDefault();
                var textObj = $('#simple-text');
                var msg = textObj.val();
                if ($.trim(msg) !== '') {
                  textObj.val('');
                  content.append(($('&lt;p&gt;').text(msg).prepend($('&lt;span&gt;').text('me'))));
                  content.scrollTop(content.height());
                  socket.send(msg);
                }
              });
      .window.editor.right
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/server.js
        .body
          pre
            code.js.
              io.on('connection', function(socket) {
                socket.on('message', function(msg) {
                  socket.broadcast.send(msg);
                });
                socket.on('disconnect', function() {
                  socket.broadcast.send('disconnected');
                });
              });

    section#namespace.example
      h3.title Namespace Example
      .window.browser
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title
            span.scheme https://
            | namespace-example
          .button
            input(type='button', value='connect')#namespace-connect
        .body#namespace-content
          p chatting message here
          p chatting message here
        .footer
          form#namespace-form
            input(type='text')#namespace-text
            input(type='submit', value='Send')
      .window.editor
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/client.js
        .body
          pre
            code.js.
              var namespace = io.connect('/namespace');
              var content = $('#namespace-content');
              namespace.on('connect', function() {
                $('#namespace-form').css('display', 'block');
                content.append($('&lt;p&gt;').text('Connected'));
              });

              namespace.on('message', function(msg) {
                content.append($('&lt;p&gt;').text(msg)
                       .append($('&lt;em&gt;').text(' from server')));
              });

              $('#namespace-form').submit(function(e) {
                var textObj = $('#namespace-text');
                var msg = textObj.val();
                textObj.val('');
                content.append($('&lt;p&gt;').text(msg)
                       .append($('&lt;em&gt;').text(' from me')));
                namespace.send(msg);
              });
      .window.editor.right
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/server.js
        .body
          pre
            code.js.
              var namespace = io
               .of('/namespace')
               .on('connection', function(socket) {
                 socket.on('message', function(data) {
                   socket.broadcast.send(data);
                 });
               });

    section#custom.example
      h3.title Custom Event Example
      .window.browser
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title
            span.scheme https://
            | custom-event-example
          .button
            input(type='button', value='connect')#custom-connect
        .body#custom-content
          p chatting message here
          p chatting message here
        .footer
          form#custom-form
            input(type='text')#custom-text
            input(type='submit', value='Send')
      .window.editor
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/client.js
        .body
          pre
            code.js.
              var custom = io.connect('/custom');
              var content = $('#custom-content');
              custom.on('connect', function() {
                $('#custom-form').css('display', 'block');
                content.append($('&lt;p&gt;').text('Connected'));
              });
              custom.on('fromserver', function(msg) {
               content.append($('&lt;p&gt;').text(msg)
                      .append($('&lt;em&gt;').text(' from server')));
              });
              $('#custom-form').submit(function(e) {
                var textObj = $('#custom-text');
                var msg = textObj.val();
                textObj.val('');
                content.append($('&lt;p&gt;').text(msg)
                       .append($('&lt;em&gt;').text(' from me')));
                custom.emit('fromclient', msg);
              });
      .window.editor.right
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/server.js
        .body
          pre
            code.js.
              var custom = io
                .of('/custom')
                .on('connection', function(socket) {
                  socket.on('fromclient', function(data) {
                    socket.broadcast.emit('fromserver', data);
                  });
                });

    section#volatile.example
      h3.title Volatile Event Example
      .window.browser
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title
            span.scheme https://
            | volatile-event-example
          .button
            input(type='button', value='connect')#volatile-connect
        .body#volatile-content
          p chatting message here
          p chatting message here
      .window.editor
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/client.js
        .body
          pre
            code.js.
              var volatile = io.connect('/volatile');
              var content = $('#volatile-content');
              volatile.on('connect', function() {
                content.append($('&lt;p&gt;').text('Connected'));
              });

              volatile.on('current time', function(msg) {
                content.append($('&lt;p&gt;').text(msg)
                       .append($('&lt;em&gt;').text(' from server')));
              });
      .window.editor.right
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/server.js
        .body
          pre
            code.js.
              var volatile = io
                .of('/volatile')
                .on('connection', function(socket) {
                  socket.on('fromclient', function(data) {
                    socket.broadcast.emit('fromserver', data);
                  });

                  var vola = setInterval(function () {
                    socket.volatile.emit('current time',
                                         'current time : ' + new Date());
                  }, 1000);

                  socket.on('disconnect', function () {
                    clearInterval(vola);
                  });
                });

    section#room.example
      h3.title Room Event Example
      .window.browser
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title
            span.scheme https://
            | room-event-example
          .button
            input(type='button', value='connect')#room-connect
        .body#room-content
          p chatting message here
          p chatting message here
        .footer
          form#room-form
            select#room-select
              option(value='first room') first room
              option(value='second room') second room
              option(value='third room') third room
            input(type='button', value='join')#room-join
            input(type='text')#room-text
            input(type='submit', value='Send')
      .window.editor
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/client.js
        .body
          pre
            code.js.
              var joined = false;
              var room = io.connect('/room');
              var content = $('#room-content');
              room.on('connect', function() {
                $('#room-form').css('display', 'block');
                content.append($('&lt;p&gt;').text('Connected'));
              });

              room.on('joined', function(msg) {
                content.append($('&lt;p&gt;').text(msg)
                       .append($('&lt;em&gt;').text(' from server')));
              });

              room.on('message', function(msg) {
                content.append($('&lt;p&gt;').text(msg)
                       .append($('&lt;em&gt;').text(' from server')));
              });

              $('#room-join').click(function(e) {
                joined = true;
                room.emit('join room', $('#room-select').val());
              });

              $('#room-form').submit(function(e) {
                var textObj = $('#room-text');
                var msg = textObj.val();
                textObj.val('');
                content.append($('&lt;p&gt;').text(msg)
                       .append($('&lt;em&gt;').text(' from me')));
                room.emit('fromclient', msg);
              });
      .window.editor.right
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/server.js
        .body
          pre
            code.js.
              var Room = io
                .of('/room')
                .on('connection', function(socket) {
                  var joinedRoom = null;
                  socket.on('join room', function(data) {
                    socket.join(data);
                    joinedRoom = data;
                    socket.emit('joined', "you've joined " + data);
                    socket.broadcast.to(joinedRoom)
                                       .send('someone joined room');
                  });
                  socket.on('fromclient', function(data) {
                    if (joinedRoom) {
                      socket.broadcast.to(joinedRoom).send(data);
                    } else {
                      socket.send(
                         "you're not joined a room." +
                         "select a room and then push join."
                      );
                    }
                  });
                });

    section#json.example
      h3.title JSON parse Example
      .window.browser
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title
            span.scheme https://
            | json-parse-example
          .button
            input(type='button', value='connect')#json-connect
        .body#json-content
          p chatting message here
          p chatting message here
        .footer
          form#json-form
            input(type='text')#json-text
            input(type='submit', value='Send')
      .window.editor
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/client.js
        .body
          pre
            code.js.
              var content = $('#json-content');
              socket.on('connect', function() {
                $('#json-form').css('display', 'block');
                content.append($('&lt;p&gt;').text('Connected'));
              });
              socket.on('message', function(msg) {
                content.append($('&lt;p&gt;').text(msg.text)
                       .append($('&lt;em&gt;').text(' from server')));
              });
              $('#json-form').submit(function(e) {
                var textObj = $('#json-text');
                var msg = textObj.val();
                textObj.val('');
                content.append($('&lt;p&gt;').text(msg)
                       .append($('&lt;em&gt;').text(' from me')));
                socket.send(msg);
              });
      .window.editor.right
        .header
          span.bullet.bullet-red
          span.bullet.bullet-yellow
          span.bullet.bullet-green
          span.title ~/server.js
        .body
          pre
            code.js.
              var json = io
                .of('/json')
                .on('connection', function(socket) {
                  socket.on('message', function(data) {
                    socket.json.broadcast.send({text:data});
                  });
                  socket.on('disconnect', function() {
                    // handle disconnect
                  });
                });

    footer.
      Written by <a href="https://github.com/outsideris" target="_blank">Outsider</a>
      in <a href="http://sideeffect.kr" target="_blank">Side Effect Studio</a>

  a(href='https://github.com/outsideris/socket.io-examples', target='_blank')
    img(style='position: absolute; top: 0; right: 0; border: 0;', src='https://s3.amazonaws.com/github/ribbons/forkme_right_white_ffffff.png', alt='Fork me on GitHub')

block inline-script
  script.
    (function() {
      hljs.initHighlightingOnLoad();

      //Simple Example
      $('#simple-connect').click(function() {
        $(this).hide();
        var socket = io.connect(location.origin);
        var content = $('#simple-content');
        socket.on('connect', function() {
          $('#simple-form').show();
          content.append($('<p>').text('connected').prepend($('<span>').text('system')));
        });
        
        socket.on('message', function(msg) {
          content.append($('<p>').text(msg).prepend($('<span>').text('somebody')));
          content.scrollTop(content.height());
        });
        
        $('#simple-form').submit(function(e) {
          e.preventDefault();
          var textObj = $('#simple-text');   
          var msg = textObj.val();
          if ($.trim(msg) !== '') {
            textObj.val('');
            content.append(($('<p>').text(msg).prepend($('<span>').text('me'))));
            content.scrollTop(content.height());
            socket.send(msg);
          }
        });
      });
      
      // Namespace Example
      $('#namespace-connect').click(function() {
        $(this).unbind('click');
        var namespace = io.connect('/namespace');
        var content = $('#namespace-content');
        namespace.on('connect', function() {
          $('#namespace-form').css('display', 'block');
          content.append($('<p>').text('Connected'));
        }); 
        
        namespace.on('message', function(msg) {
          content.append($('<p>').text(msg).append($('<em>').text(' from server')));
          content.scrollTop(content.height());
        });
        
        $('#namespace-form').submit(function(e) {
          e.preventDefault();
          var textObj = $('#namespace-text');
          var msg = textObj.val();
          if (msg !== '') {
            textObj.val('');
            content.append($('<p>').text(msg).append($('<em>').text(' from me')));
            content.scrollTop(content.height());
            namespace.send(msg);
          }
        });
      });
      
      // Custom Event Example
      $('#custom-connect').click(function() {
        $(this).unbind('click');
        var custom = io.connect('/custom');
        var content = $('#custom-content');
        custom.on('connect', function() {
          $('#custom-form').css('display', 'block');
          content.append($('<p>').text('Connected'));
        }); 
        
        custom.on('fromserver', function(msg) {
          content.append($('<p>').text(msg).append($('<em>').text(' from server')));
          content.scrollTop(content.height());
        });
        
        $('#custom-form').submit(function(e) {
          e.preventDefault();
          var textObj = $('#custom-text');
          var msg = textObj.val();
          if (msg !== '') {
            textObj.val('');
            content.append($('<p>').text(msg).append($('<em>').text(' from me')));
            content.scrollTop(content.height());
            custom.emit('fromclient', msg);
          }
        });
      });
      
      // Volatile Event Example
      $('#volatile-connect').click(function() {
        $(this).unbind('click');
        var volatile = io.connect('/volatile');
        var content = $('#volatile-content');
        volatile.on('connect', function() {
          content.append($('<p>').text('Connected'));
        }); 

        volatile.on('current time', function(msg) {
          
          content.append($('<p>').text(msg).append($('<em>').text(' from server')));
          content.scrollTop(content.height());
        });
      });
      
      // Room Event Example
      $('#room-connect').click(function() {
        $(this).unbind('click');
        var joined = false;
        var room = io.connect('/room');
        var content = $('#room-content');
        room.on('connect', function() {
          $('#room-form').css('display', 'block');
          content.append($('<p>').text('Connected'));
        }); 
        
        room.on('joined', function(msg) {
          content.append($('<p>').text(msg).append($('<em>').text(' from server')));
          content.scrollTop(content.height());
        });
        
        room.on('message', function(msg) {
          content.append($('<p>').text(msg).append($('<em>').text(' from server')));
          content.scrollTop(content.height());
        });
        
        $('#room-join').click(function(e) {
          joined = true;
          room.emit('join room', $('#room-select').val());
        });
        
        $('#room-form').submit(function(e) {
          e.preventDefault();
          var textObj = $('#room-text');
          var msg = textObj.val();
          if (msg !== '') {
            textObj.val('');
            content.append($('<p>').text(msg).append($('<em>').text(' from me')));
            content.scrollTop(content.height());
            room.emit('fromclient', msg);
          }
        });
      }); 
      
      //JSON Parse Example
      $('#json-connect').click(function() {
        $(this).unbind('click');
        var socket = io.connect('/json');
        var content = $('#json-content');
        socket.on('connect', function() {
          $('#json-form').css('display', 'block');
          content.append($('<p>').text('Connected'));  
        });
        
        socket.on('message', function(msg) {
          content.append($('<p>').text(msg.text).append($('<em>').text(' from server')));
          content.scrollTop(content.height());
        });
        
        $('#json-form').submit(function(e) {
          e.preventDefault();
          var textObj = $('#json-text');   
          var msg = textObj.val();
          if (msg !== '') {
            textObj.val('');
            content.append($('<p>').text(msg).append($('<em>').text(' from me')));
            content.scrollTop(content.height());
            socket.send(msg);
          }
        });
      });
    })();
